# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: '4.0'
services:
  watchtower:
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_SCHEDULE: '15 9 * * *'
      TZ: 'Asia/Jakarta'
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_ROLLING_RESTART: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: true
      WATCHTOWER_HEAD_BASED_DIGEST_CHECKING: true
    networks:
      - armin-net
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass wbmsapp --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - 6379:6379
    volumes:
      - redis:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - armin-net
  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    hostname: wbms.dsn
    cap_add:
      - NET_ADMIN
    cap_drop:
      - MKNOD
    ports:
      - '389:389'
      - '636:636'
    tty: true
    stdin_open: true
    environment:
      LDAP_ORGANISATION: wbms-dsn
      LDAP_DOMAIN: wbms.dsn
      LDAP_BASE_DN: dc=wbms,dc=dsn
      LDAP_TLS_CRT_FILENAME: server.crt
      LDAP_TLS_KEY_FILENAME: server.key
      LDAP_TLS_CA_CRT_FILENAME: wbms.dsn.ca.crt
      LDAP_ADMIN_USERNAME: admin
      LDAP_ADMIN_PASSWORD: admin
      LDAP_CONFIG_PASSWORD: config
      LDAP_MAIL_ATTRIBUTE: mail
      # LDAP_READONLY_USER: true
      # LDAP_READONLY_USER_USERNAME: user
      # LDAP_READONLY_USER_PASSWORD: watcher
      LDAP_RFC2307BIS_SCHEMA: true
      LDAP_REMOVE_CONFIG_AFTER_SETUP: true
      # LDAP_SEED_INTERNAL_LDIF_PATH: '/assets/openldap/custom/ldif'
      # LDAP_TLS: false
      LDAP_TLS_DH_PARAM_FILE: /container/service/slapd/assets/certs/dhparam.pem
      # LDAP_TLS_ENFORCE: false
      LDAP_TLS_CIPHER_SUITE: SECURE256:+SECURE128:-VERS-TLS-ALL:+VERS-TLS1.2:-RSA:-DHE-DSS:-CAMELLIA-128-CBC:-CAMELLIA-256-CBC
      LDAP_TLS_VERIFY_CLIENT: never
    command: --copy-service --loglevel debug
    volumes:
      - ldap-data:/container/service/slapd/assets/config/bootstrap/ldif/custom
      # - ldap-config:/etc/ldap/slapd.d
      - ../armin/ldap/config:/etc/ldap/slapd.d
      - ../armin/ldap/certificates:/container/service/slapd/assets/certs
      - ../armin/ldap/database:/var/lib/ldap
      - ../armin/ldif:/assets/openldap/custom/ldif
    networks:
      - armin-net
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ldap://wbms.dsn
      PHPLDAPADMIN_HTTPS: false
    ports:
      - '18080:80'
    depends_on:
      - openldap
    networks:
      - armin-net
  # openldap-ui:
  #   image: wheelybird/ldap-user-manager:v1.5
  #   container_name: openldap-ui
  #   environment:
  #     LDAP_URI: ldap://wbms.dsn:389
  #     LDAP_BASE_DN: dc=wbms,dc=dsn
  #     # LDAP_REQUIRE_STARTTLS: false
  #     DEFAULT_USER_GROUP: staff
  #     LDAP_ADMINS_GROUP: admins
  #     LDAP_ADMIN_BIND_DN: cn=admin,dc=wbms,dc=dsn
  #     LDAP_ADMIN_BIND_PWD: admin
  #     LDAP_USER_OU: employees
  #     LDAP_GROUP_OU: roles
  #     LDAP_IGNORE_CERT_ERRORS: true
  #     ACCOUNT_REQUESTS_ENABLED: false
  #     FORCE_RFC2307BIS: true
  #     NO_HTTPS: TRUE
  #     # PASSWORD_HASH: SSHA
  #     SERVER_HOSTNAME: wbms.dsn
  #   depends_on:
  #     - openldap
  #   ports:
  #     - 18080:80
  #   networks:
  #     - armin-net
  wbms-db:
    image: 'bitnami/mariadb'
    restart: always
    ports:
      - 33061:3306
    environment:
      MARIADB_ROOT_USER: wbms_dba
      MARIADB_ROOT_PASSWORD: P@ss3031323334
      MARIADB_USER: wbms_dbu
      MARIADB_PASSWORD: 3031323334
      MARIADB_DATABASE: wbms

      MARIADB_REPLICATION_MODE: master
      MARIADB_REPLICATION_USER: wbms_dbr
      MARIADB_REPLICATION_PASSWORD: 3031323334

      MARIADB_EXTRA_FLAGS: --innodb_strict_mode=0 --innodb_log_file_size=512M --innodb_log_buffer_size=256M

    volumes:
      - mariadb-data-pks04:/bitnami/mariadb
      # - ./database/my_custom.cnf:/opt/bitnami/mariadb/conf/my_custom.cnf:ro
    networks:
      - armin-net
  wbms-phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_ARBITRARY: 1
    networks:
      - armin-net
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - 8282:8080
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_SERVER: wbms-db
      ADMINER_DESIGN: galkaev #nette
      ADMINER_DEFAULT_DB_NAME: wbms
      ADMINER_PLUGINS: tables-filter tinymce
    networks:
      - armin-net
  # wbms-backend:
  #   image: almyra/wbms_tbe:latest
  #   depends_on:
  #     - wbms-db
  #   restart: always
  #   ports:
  #     - 6001:6001
  #   environment:
  #     WBMS_APP_PORT: '6001'

  #     WBMS_DB_DOMAIN: 'wbms-db'
  #     WBMS_DB_PORT: '3306'
  #     WBMS_DB_USER: 'wbms_dbu'
  #     WBMS_DB_PASSWORD: '3031323334'
  #     WBMS_DB_NAME: 'wbms'

  #     # 1: PKS, 2: T30, 3: BULKING
  #     WBMS_SITE_TYPE: '1'

  #     WBMS_WB_PORT: '9001'
  #     WBMS_WB_MIN_WEIGHT: 1
  #     WBMS_WB_STABLE_PERIOD: 3000

  #     WBMS_SEMAI_API_KEY: 'lg8EzYBtTVJnBuTSjQIJkChoDNlGMpso'
  #     WBMS_SEMAI_API_URL: 'https://dispatch-api-dev.semaigroup.com/external-channel'
  #     WBMS_SEMAI_CERT: './cert/pks4.wb.cert.pem'
  #     WBMS_SEMAI_KEY: './cert/pks4.wb.key.pem'
  #     UPLOAD_LOCATION: ./upload
  #     MAX_FILE_SIZE: 5000000

  #     LDAP_HOST: 'ldap://ldap.wbms.dsn'
  #     LDAP_DN: 'cn=admin,dc=wbms,dc=dsn'
  #     LDAP_PASSWORD: 'admin'
  #     LDAP_BASE_DN: 'dc=wbms,dc=dsn'
  #     LDAP_SEARCH_FILTER: '(uid={{username}})(email=*@foo.com))'
  #   volumes:
  #     - ../armin/server/upload:/wbms_be/upload
  #   networks:
  #     - armin-net
  # wbms-fe:
  #   image: 'almyra/wbms_fe:latest'
  #   depends_on:
  #     - wbms-backend
  #   restart: always
  #   # build:
  #   #     context: ./client
  #   #     dockerfile: Dockerfile
  #   ports:
  #     - '3000:3000'
  #   # volumes:
  #   #     - ./client:/app
  #   networks:
  #     - armin-net
networks:
  armin-net:
    driver: bridge
volumes:
  ldap-data:
  ldap-config:
  redis:
  mariadb-data-pks04:
