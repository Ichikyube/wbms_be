# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: "3.8"
services:
<<<<<<< HEAD
  server:
=======
  wbms-db:
    image: "bitnami/mariadb"
    restart: always
    ports:
      - 33061:3306

    environment:
      MARIADB_ROOT_USER: wbms_dba
      MARIADB_ROOT_PASSWORD: P@ss3031323334
      MARIADB_USER: wbms_dbu
      MARIADB_PASSWORD: 3031323334
      MARIADB_DATABASE: wbms

      MARIADB_REPLICATION_MODE: master
      MARIADB_REPLICATION_USER: wbms_dbr
      MARIADB_REPLICATION_PASSWORD: 3031323334

      MARIADB_EXTRA_FLAGS: --innodb_strict_mode=0 --innodb_log_file_size=512M --innodb_log_buffer_size=256M

    volumes:
      - ../armin/database/mariadb-data-pks04:/bitnami/mariadb
      # - ./database/my_custom.cnf:/opt/bitnami/mariadb/conf/my_custom.cnf:ro
    networks:
      - armin-net
  wbms_be:
    image: wbms_bet
    depends_on:
      - wbms-db
    restart: always
    ports:
      - 6001:6001
>>>>>>> nani
    build:
      context: .
    environment:
      NODE_ENV: production
<<<<<<< HEAD
    ports:
      - 6001:6001
=======
      WBMS_APP_PORT: 6001
      WBMS_DB_DOMAIN: "wbms-db"
      WBMS_DB_PORT: "3306"
      WBMS_DB_USER: "wbms_dbu"
      WBMS_DB_PASSWORD: "3031323334"
      WBMS_DB_NAME: "wbms"
>>>>>>> nani

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

<<<<<<< HEAD
=======
      WBMS_WB_PORT: "9001"
      WBMS_WB_MIN_WEIGHT: 1
      WBMS_WB_STABLE_PERIOD: 3000

      WBMS_SEMAI_API_KEY: "lg8EzYBtTVJnBuTSjQIJkChoDNlGMpso"
    networks:
      - armin-net

  wbms-fo:
    image: "mromzy/wbms-fo:0.28.01"
    restart: always
    ports:
      - 8000:3000

    networks:
      - armin-net

  wbms-phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_ARBITRARY: 1
    networks:
      - armin-net

networks:
  armin-net:
    driver: bridge
>>>>>>> nani
