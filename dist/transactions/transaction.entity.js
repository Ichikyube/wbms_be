"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionEntity = void 0;
const openapi = require("@nestjs/swagger");
class TransactionEntity {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, tType: { required: true, type: () => Number }, bonTripNo: { required: true, type: () => String }, vehicleStatus: { required: true, type: () => Number }, deliveryStatus: { required: true, type: () => Number }, progressStatus: { required: true, type: () => Number }, deliveryOrderId: { required: true, type: () => String }, deliveryOrderNo: { required: true, type: () => String }, deliveryDate: { required: true, type: () => Date }, productId: { required: true, type: () => String }, productCode: { required: true, type: () => String }, productName: { required: true, type: () => String }, rspoSccModel: { required: true, type: () => Number }, rspoUniqueNumber: { required: true, type: () => String }, isccSccModel: { required: true, type: () => Number }, isccUniqueNumber: { required: true, type: () => String }, isccGhgValue: { required: true, type: () => Number }, isccEeeValue: { required: true, type: () => Number }, transporterId: { required: true, type: () => String }, transporterCompanyCode: { required: true, type: () => String }, transporterCompanyName: { required: true, type: () => String }, transporterCompanyShortName: { required: true, type: () => String }, driverId: { required: true, type: () => String }, driverNik: { required: true, type: () => String }, driverName: { required: true, type: () => String }, driverLicenseNo: { required: true, type: () => String }, transportVehicleId: { required: true, type: () => String }, transportVehiclePlateNo: { required: true, type: () => String }, transportVehicleProductCode: { required: true, type: () => String }, transportVehicleProductName: { required: true, type: () => String }, transportVehicleSccModel: { required: true, type: () => Number }, originSiteId: { required: true, type: () => String }, originSiteCode: { required: true, type: () => String }, originSiteName: { required: true, type: () => String }, originSourceStorageTankId: { required: true, type: () => String }, originSourceStorageTankCode: { required: true, type: () => String }, originSourceStorageTankName: { required: true, type: () => String }, destinationSiteId: { required: true, type: () => String }, destinationSiteCode: { required: true, type: () => String }, destinationSiteName: { required: true, type: () => String }, destinationSinkStorageTankId: { required: true, type: () => String }, destinationSinkStorageTankCode: { required: true, type: () => String }, destinationSinkStorageTankName: { required: true, type: () => String }, originFfaPercentage: { required: true, type: () => Number }, originMoistPercentage: { required: true, type: () => Number }, originDirtPercentage: { required: true, type: () => Number }, originWeighInKg: { required: true, type: () => Number }, originWeighInRemark: { required: true, type: () => String }, originWeighInOperatorName: { required: true, type: () => String }, originWeighInTimestamp: { required: true, type: () => Date }, originWeighOutKg: { required: true, type: () => Number }, originWeighOutRemark: { required: true, type: () => String }, originWeighOutOperatorName: { required: true, type: () => String }, originWeighOutTimestamp: { required: true, type: () => Date }, potonganWajib: { required: true, type: () => Number }, potonganLain: { required: true, type: () => Number }, destinationWeighInKg: { required: true, type: () => Number }, destinationWeighInRemark: { required: true, type: () => String }, destinationWeighInOperatorName: { required: true, type: () => String }, destinationWeighInTimestamp: { required: true, type: () => Date }, destinationWeighOutKg: { required: true, type: () => Number }, destinationWeighOutRemark: { required: true, type: () => String }, destinationWeighOutOperatorName: { required: true, type: () => String }, destinationWeighOutTimestamp: { required: true, type: () => Date }, returnWeighInKg: { required: true, type: () => Number }, returnWeighInRemark: { required: true, type: () => String }, returnWeighInOperatorName: { required: true, type: () => String }, returnWeighInTimestamp: { required: true, type: () => Date }, returnWeighOutKg: { required: true, type: () => Number }, returnWeighOutRemark: { required: true, type: () => String }, returnWeighOutOperatorName: { required: true, type: () => String }, returnWeighOutTimestamp: { required: true, type: () => Date }, currentSeal1: { required: true, type: () => String }, currentSeal2: { required: true, type: () => String }, currentSeal3: { required: true, type: () => String }, currentSeal4: { required: true, type: () => String }, loadedSeal1: { required: true, type: () => String }, loadedSeal2: { required: true, type: () => String }, loadedSeal3: { required: true, type: () => String }, loadedSeal4: { required: true, type: () => String }, loadingRemark: { required: true, type: () => String }, loadingOperatorName: { required: true, type: () => String }, loadingTimestamp: { required: true, type: () => Date }, unloadedSeal1: { required: true, type: () => String }, unloadedSeal2: { required: true, type: () => String }, unloadedSeal3: { required: true, type: () => String }, unloadedSeal4: { required: true, type: () => String }, unloadingRemark: { required: true, type: () => String }, unloadingOperatorName: { required: true, type: () => String }, unloadingTimestamp: { required: true, type: () => Date }, returnUnloadedSeal1: { required: true, type: () => String }, returnUnloadedSeal2: { required: true, type: () => String }, returnUnloadedSeal3: { required: true, type: () => String }, returnUnloadedSeal4: { required: true, type: () => String }, returnUnloadingRemark: { required: true, type: () => String }, returnUnloadingOperatorName: { required: true, type: () => String }, returnUnloadingTimestamp: { required: true, type: () => Date }, jsonData: { required: true, type: () => Object }, isDeleted: { required: true, type: () => Boolean }, userCreated: { required: true, type: () => String }, userModified: { required: true, type: () => String }, dtCreated: { required: true, type: () => Date }, dtModified: { required: true, type: () => Date } };
    }
}
exports.TransactionEntity = TransactionEntity;
//# sourceMappingURL=transaction.entity.js.map