import { User, UserRole } from "@prisma/client";
import { DbService } from "src/db/db.service";
import { CreateUserDto, UpdateUserDto } from "./dto";
import { UserEntity } from "./entities";
export declare class UsersService {
    private db;
    constructor(db: DbService);
    getIAM(id: string): Promise<UserEntity>;
    getAll(): Promise<UserEntity[]>;
    getAllDeleted(): Promise<UserEntity[]>;
    getById(id: string): Promise<UserEntity>;
    searchFirst(query: any): Promise<UserEntity>;
    searchMany(query: any): Promise<UserEntity[]>;
    searchFirstDeleted(query: any): Promise<UserEntity>;
    searchManyDeleted(query: any): Promise<UserEntity[]>;
    create(dto: CreateUserDto, userId: string): Promise<UserEntity>;
    updateById(id: string, dto: UpdateUserDto, userId: string): Promise<UserEntity>;
    deleteById(id: string, userId: string): Promise<import("@prisma/client/runtime/library").GetResult<{
        id: string;
        username: string;
        email: string;
        nik: string;
        name: string;
        division: string;
        position: string;
        phone: string;
        hashedPassword: string;
        hashedRT: string;
        role: UserRole;
        isEmailVerified: boolean;
        isLDAPUser: boolean;
        isDisabled: boolean;
        isDeleted: boolean;
        userCreated: string;
        userModified: string;
        dtCreated: Date;
        dtModified: Date;
    }, unknown> & {}>;
    updateUserRole(userId: string, userRole: UserRole): Promise<User>;
}
