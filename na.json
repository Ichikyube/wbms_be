Socket {
    _events: [Object: null prototype] { error: [Function: noop] },
    _eventsCount: 1,
    _maxListeners: undefined,
    nsp: <ref *1> Namespace {
      _events: [Object: null prototype] { connection: [Function (anonymous)] },
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: Map(0) {},
      _fns: [ [Function: corsMiddleware] ],
      _ids: 0,
      server: Server {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _nsps: [Map],
        parentNsps: Map(0) {},
        parentNamespacesFromRegExp: Map(0) {},
        _path: '/socket.io',
        clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
        _connectTimeout: 45000,
        _serveClient: true,
        _parser: [Object],
        encoder: [Encoder],
        opts: [Object],
        _adapter: [class Adapter extends EventEmitter],
        sockets: [Circular *1],
        eio: [Server],
        httpServer: [Server],
        engine: [Server],
        _corsMiddleware: [Function: corsMiddleware],
        [Symbol(kCapture)]: false
      },
      name: '/',
      adapter: Adapter {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        nsp: [Circular *1],
        rooms: Map(0) {},
        sids: Map(0) {},
        encoder: [Encoder],
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    },
    client: Client {
      sockets: Map(0) {},
      nsps: Map(0) {},
      server: Server {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _nsps: [Map],
        parentNsps: Map(0) {},
        parentNamespacesFromRegExp: Map(0) {},
        _path: '/socket.io',
        clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
        _connectTimeout: 45000,
        _serveClient: true,
        _parser: [Object],
        encoder: [Encoder],
        opts: [Object],
        _adapter: [class Adapter extends EventEmitter],
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server],
        _corsMiddleware: [Function: corsMiddleware],
        [Symbol(kCapture)]: false
      },
      conn: Socket {
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        id: '5fztwghu1UPkI5n4AAAA',
        server: [Server],
        upgrading: false,
        upgraded: false,
        _readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        protocol: 4,
        remoteAddress: '::1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer: Timeout {
          _idleTimeout: 45000,
          _idlePrev: [TimersList],
          _idleNext: [Timeout],
          _idleStart: 6415,
          _onTimeout: [Function (anonymous)],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 46,
          [Symbol(triggerId)]: 45
        },
        pingIntervalTimer: Timeout {
          _idleTimeout: 25000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 6393,
          _onTimeout: [Function (anonymous)],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 32,
          [Symbol(triggerId)]: 0
        },
        transport: [Polling],
        [Symbol(kCapture)]: false
      },
      encoder: Encoder { replacer: undefined },
      decoder: Decoder { reviver: undefined, _callbacks: [Object] },
      id: '5fztwghu1UPkI5n4AAAA',
      onclose: [Function: bound onclose],
      ondata: [Function: bound ondata],
      onerror: [Function: bound onerror],
      ondecoded: [Function: bound ondecoded],
      connectTimeout: Timeout {
        _idleTimeout: 45000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 6404,
        _onTimeout: [Function (anonymous)],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 35,
        [Symbol(triggerId)]: 0
      }
    },
    recovered: false,
    data: {},
    connected: false,
    acks: Map(0) {},
    fns: [],
    flags: {},
    server: <ref *2> Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: Map(1) { '/' => [Namespace] },
      parentNsps: Map(0) {},
      parentNamespacesFromRegExp: Map(0) {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: {
        protocol: 5,
        PacketType: [Object],
        Encoder: [class Encoder],
        Decoder: [class Decoder extends Emitter]
      },
      encoder: Encoder { replacer: undefined },
      opts: {
        cors: [Object],
        middlewares: [Array],
        cleanupEmptyChildNamespaces: false
      },
      _adapter: [class Adapter extends EventEmitter],
      sockets: <ref *1> Namespace {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        sockets: Map(0) {},
        _fns: [Array],
        _ids: 0,
        server: [Circular *2],
        name: '/',
        adapter: [Adapter],
        [Symbol(kCapture)]: false
      },
      eio: Server {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        middlewares: [Array],
        clients: [Object],
        clientsCount: 1,
        opts: [Object],
        ws: [WebSocketServer],
        [Symbol(kCapture)]: false
      },
      httpServer: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        requestTimeout: 300000,
        headersTimeout: 60000,
        keepAliveTimeout: 5000,
        connectionsCheckingInterval: 30000,
        joinDuplicateHeaders: undefined,
        _events: [Object: null prototype],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: true,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        httpAllowHalfOpen: false,
        timeout: 0,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        _connectionKey: '6::::6001',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 23,
        [Symbol(http.server.connections)]: ConnectionsList {},
        [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 5158,
          _onTimeout: [Function: bound checkConnections],
          _timerArgs: undefined,
          _repeat: 30000,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 17,
          [Symbol(triggerId)]: 0
        },
        [Symbol(kUniqueHeaders)]: null
      },
      engine: Server {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        middlewares: [Array],
        clients: [Object],
        clientsCount: 1,
        opts: [Object],
        ws: [WebSocketServer],
        [Symbol(kCapture)]: false
      },
      _corsMiddleware: [Function: corsMiddleware],
      [Symbol(kCapture)]: false
    },
    adapter: <ref *3> Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: <ref *1> Namespace {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        sockets: Map(0) {},
        _fns: [Array],
        _ids: 0,
        server: [Server],
        name: '/',
        adapter: [Circular *3],
        [Symbol(kCapture)]: false
      },
      rooms: Map(0) {},
      sids: Map(0) {},
      encoder: Encoder { replacer: undefined },
      [Symbol(kCapture)]: false
    },
    id: 'iB-WmulnLORnD3f7AAAB',
    handshake: {
      headers: {
        host: 'localhost:6001',
        connection: 'keep-alive',
        'sec-ch-ua': '"Google Chrome";v="117", "Not;A=Brand";v="8", "Chromium";v="117"',
        accept: '*/*',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://localhost:3000',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:3000/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9'
      },
      time: 'Thu Oct 05 2023 13:36:03 GMT+0700 (Indochina Time)',
      address: '::1',
      xdomain: true,
      secure: false,
      issued: 1696487763515,
      url: '/socket.io/?EIO=4&transport=polling&t=Oh-ZEu5',
      query: [Object: null prototype] {
        EIO: '4',
        transport: 'polling',
        t: 'Oh-ZEu5'
      },
      auth: {}
    },
    [Symbol(kCapture)]: false
  }
}